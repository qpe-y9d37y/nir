


N/A                                                             Q. Petit
UNIX/Linux
Technical Documentation                                    February 2020


                         Python - Docx Edition


Notice

Due to constant changes in information technology systems and
applications, the information contained in this site is provided on
an "as is" basis with no guarantees of completeness, accuracy,
usefulness or timeliness.







































                        Technical Documentation                 [Page 1]
Python                   Python - Docx Edition             February 2020


Table of Contents

   1. Introduction ....................................................2
   2. Installation ....................................................2
   3. Word Style Template .............................................2
   4. Usage ...........................................................3
      4.1. Document Creation ..........................................3
      4.2. Text in a Document .........................................3
      4.3. Styles and Layout ..........................................3
      4.4. Table in a Document ........................................4
      4.5. Picture in a Document ......................................5
      4.6. Save the Document ..........................................6
   5. Sources .........................................................6



1.  Introduction

   python-docx is a Python library for creating and updating Microsoft
   Word (.docx) files.



2.  Installation

   To be able to use python-docx, you need to install the module. First,
   update pip:

        pip install --upgrade pip setuptools

   If you're using a proxy, then add the option --proxy, for example:

        pip --proxy http://${PROXY_IP}:${PORT} install --upgrade pip

   Now you can install the module:

        pip install python-docx

   If you face an error like the one hereunder, make sure that you
   updated the setuptools module.

        error: can't copy 'docx/templates/default-docx-template':
        doesn't exist or not a regular file



3.  Word Style Template

   To create a template, open a new blank document in MS Word and in the
   "Home" tab, under "Styles", select "Create a Style". The styles that
   you will create are the ones that you will use when inserting text,


                        Technical Documentation                 [Page 2]
Python                   Python - Docx Edition             February 2020


   in the following example "Title".

        document.add_paragraph('The Lord of the Rings', 'Title')

   You can also add pictures on your cover page.



4.  Usage

4.1.  Document Creation

   To create a document, first import the python-docx module:

        from docx import Document

   To open an existing presentation, do:

        document = Document(docx_template)

   Or a new one:

        document = Document()



4.2.  Text in a Document

   To insert a text in a document, do:

        document.add_paragraph('Hello World')



4.3.  Styles and Layout

   To apply a specific style for a text, do:

        document.add_paragraph(text, style)

   For example:

        document.add_paragraph('The Lord of the Rings', 'Title')
        document.add_paragraph('The Fellowship of the Ring', 'Subtitle')
        document.add_paragraph('Prologue', 'Heading 1')
        document.add_paragraph('Concerning Hobbits', 'Heading 2')

        content = """This book is largely concerned with Hobbits, and
        from its pages a reader may discover much of their character and
        a little of their history."""



                        Technical Documentation                 [Page 3]
Python                   Python - Docx Edition             February 2020


        document.add_paragraph(content, 'Normal')

   If you want to create a new style, first import the necessary
   libraries:

        from docx.shared import Pt, RGBColor
        from docx.enum.style import WD_STYLE_TYPE

   Now you can create the new style, start by declaring it, giving it a
   name:

        document.styles.add_style('Titulo', WD_STYLE_TYPE.PARAGRAPH)

   Then set it the way you want:

        title_style = document.styles['Titulo']
        title_style.font.name = "Arial"
        title_style.font.size = Pt(28)
        title_style.font.color.rgb = RGBColor(0x00, 0x00, 0x00)
        title_style.paragraph_format.space_after = Pt(28)

   To add a page break, do:

        document.add_page_break()



4.4.  Table in a Document

   To create a new table, do:

        table = document.add_table(r, c, s)

   With:

   o  r the number of rows in the table

   o  c the number of columns in the table

   o  s the style of the table (optional)

   To add content in a cell, do:

        table.cell(row_id, col_id).text = 'Firstname'

   For example, if I wanted to create a table like the following one:

        +-----------+----------+
        | Firstname | Lastname |
        +-----------+----------+
        | Bilbo     | Baggins  |


                        Technical Documentation                 [Page 4]
Python                   Python - Docx Edition             February 2020


        +-----------+----------+

   I would do:

        table = document.add_table(2, 2, 'Table Grid')
        table.cell(0, 0).text = 'Firstname'
        table.cell(0, 1).text = 'Lastname'
        table.cell(1, 0).text = "Bilbo"
        table.cell(1, 1).text = "Baggins"

   To set the background color to a specific cell, import the necessary
   libraries:

        from docx.oxml.shared import OxmlElement, qn

   Add the following function:

        def shade_cells(cell, shade):
            tcPr = cell._tc.get_or_add_tcPr()
            tcVAlign = OxmlElement("w:shd")
            tcVAlign.set(qn("w:fill"), shade)
            tcPr.append(tcVAlign)

   Now, you can use the function like:

        shade_cells(table.cell(x, y), "FF6666")



4.5.  Picture in a Document

   To add a picture in a document, do:

        document.add_picture(p, w)

   With:

   o  p the picture file you want to insert

   o  w the width of the picture

   You can also add the height of the picture, instead or in addition to
   the width of the picture. However, if you add both the width and the
   height, the proportions of the picture won't be kept.

   If you want to use inches for the width or height of the picture,
   import the library:

        from docx.shared import Inches

   Then you can declare the width like:


                        Technical Documentation                 [Page 5]
Python                   Python - Docx Edition             February 2020



        graph_width = Inches(6.0)



4.6.  Save the Document

   To save the document, do:

        document.save(docx_output)



5.  Sources

   o  Canny, S. python-docx. Retrived from
     https://python-docx.readthedocs.io/en/latest/




Authors' Addresses

   Quentin Petit (editor)

   Luxembourg

   EMail: <petit.quent@gmail.com>

























                        Technical Documentation                 [Page 6]
